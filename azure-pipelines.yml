trigger:
  branches:
    include:
      - main  # Change if needed

pool:
  vmImage: 'ubuntu-latest'

variables:
  acrName: 'myacr'  # Replace with your ACR name
  aksClusterName: 'my-aks-cluster'  # Replace with your AKS cluster name
  aksResourceGroup: 'my-resource-group'  # Replace with your Azure Resource Group
  containerRegistry: 'myacr.azurecr.io'
  imageName: 'my-app'
  tag: '$(Build.BuildId)'

stages:
- stage: Build
  displayName: 'Build and Push Image'
  jobs:
  - job: Build
    steps:
    - task: Docker@2
      displayName: 'Login to ACR'
      inputs:
        command: 'login'
        containerRegistry: '$(acrName)'

    - task: Docker@2
      displayName: 'Build Docker Image'
      inputs:
        command: 'build'
        repository: '$(containerRegistry)/$(imageName)'
        dockerfile: 'Dockerfile'
        tags: '$(tag)'

    - task: Docker@2
      displayName: 'Push Docker Image'
      inputs:
        command: 'push'
        repository: '$(containerRegistry)/$(imageName)'
        tags: '$(tag)'

- stage: Deploy
  displayName: 'Deploy to AKS'
  jobs:
  - job: Deploy
    steps:
    - task: Kubernetes@1
      displayName: 'Set AKS Context'
      inputs:
        connectionType: 'Azure Resource Manager'
        azureSubscriptionEndpoint: 'MyAzureConnection'  # Change to your service connection name
        azureResourceGroup: '$(aksResourceGroup)'
        kubernetesCluster: '$(aksClusterName)'
        command: 'apply'
        arguments: '-f k8s/deployment.yaml -f k8s/service.yaml'
