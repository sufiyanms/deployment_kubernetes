trigger:
  - main  # Fixed typo in the trigger name

resources:
  - repo: self

pool:
  name: Default
  demands:
    - Agent.Name -equals DESKTOP-DDVOVCD  # Corrected syntax

variables:
  acrName: 'myacr'  # Replace with your ACR name
  aksClusterName: 'my-aks-cluster'  # Replace with your AKS cluster name
  aksResourceGroup: 'Application_Test'  # Replace with your Azure Resource Group
  containerRegistry: 'myacr.azurecr.io'
  imageName: 'my-app'
  tag: '$(Build.BuildId)'

stages:
- stage: Build
  displayName: 'Build Docker image and Push Image'
  jobs:
  - job: Build
    steps:
    - task: Docker@2
      displayName: 'Login to ACR'
      inputs:
        command: 'login'
        containerRegistry: '$(acrName)'

    - task: Docker@2
      displayName: 'Build Docker Image'
      inputs:
        command: 'build'
        repository: '$(containerRegistry)/$(imageName)'
        dockerfile: 'Dockerfile'
        tags: '$(tag)'

    - task: Docker@2
      displayName: 'Push Docker Image'
      inputs:
        command: 'push'
        repository: '$(containerRegistry)/$(imageName)'
        tags: '$(tag)'

    - task: CopyFiles@2  # Copy Kubernetes YAML Files
      displayName: 'Copy Kubernetes YAML files'
      inputs:
        SourceFolder: '$(Build.SourcesDirectory)/app/k8s'  # Ensure correct path
        Contents: '*.yaml'  # Standard YAML extension
        TargetFolder: '$(Build.ArtifactStagingDirectory)/helm'

    - task: PublishPipelineArtifact@1  # Publish Kubernetes YAML Files
      displayName: 'Publish Kubernetes YAML files'
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)/helm'
        artifact: 'helm'

# - stage: Deploy
#   displayName: 'Deploy to AKS'
#   jobs:
#   - job: Deploy
#     steps:
#     - task: Kubernetes@1
#       displayName: 'Set AKS Context'
#       inputs:
#         connectionType: 'Azure Resource Manager'
#         azureSubscriptionEndpoint: '8cc9c5c6-1a50-4149-a01a-2dee13e75ce1'  # Change to your service connection name
#         azureResourceGroup: '$(aksResourceGroup)'
#         kubernetesCluster: '$(aksClusterName)'
#         command: 'apply'
#         arguments: '-f app/k8s/deployment.yaml -f app/k8s/service.yaml'
